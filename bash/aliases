#
# shortuts
#

# directory traversal
function rr() {
  cd ~/Sites/$1
}

function aps() {
  if [ -z "$1" ]; then # Is parameter #1 zero length?
    cd /var/www/apps
  else
    cd /var/www/apps/$1/current
  fi
}

# speed up opening a directory in TextMate

alias mate.="mate ."
function tm {
  if [[ $# > 0 ]]; then
    mate $@
  else
    mate .
  fi
}

# speed up opening a repo in Git Tower

alias gittower.="gittower ."
function tower {
  if [[ $# > 0 ]]; then
    gittower $@
  else
    gittower .
  fi
}
alias gt="gittower"


# common utilities
alias b="bundle"
alias be="bundle exec"
alias e="$EDITOR"
alias ls="ls -G"
alias l="ls -l"
alias p="psql -hlocalhost"
alias rb="rbenv local"
alias rb-="rbenv local --unset"

alias history-top='history | awk '"'"'{print $2}'"'"' | awk '"'"'BEGIN {FS="|"}{print $1}'"'"' | sort | uniq -c | sort -n | tail -n15 | sort -nr'

# mysql
function ms() {
  if [ -z "$1" ]; then # Is parameter #1 zero length?
    echo "mysql"
    mysql
  else
    if [ -z "$RAILS_ENV" ]; then # Is parameter #1 zero length?
      echo "mysql $1_development"
      mysql $1_development
    else
      echo "mysql $1_$RAILS_ENV"
      mysql $1_$RAILS_ENV
    fi
  fi
}
alias m="ms"

# rails
alias rst="touch tmp/restart.txt"
alias brs="bundle exec rails s"
alias brc="bundle exec rails c"
alias brg="bundle exec rails g"
alias migrate="bundle exec rake db:migrate"
function tl() {
  if [ -z "$RAILS_ENV" ]; then
    echo "tail -f log/development.log"
    tail -f log/development.log
  else
    echo "tail -f log/$RAILS_ENV.log"
    tail -f log/$RAILS_ENV.log
  fi
}

# git
alias g="git checkout"
alias s="git status"
alias ga="git add"
alias gb="git checkout -b"
alias gc="git commit -m"
alias gc0="git commit --allow-empty -m"
alias gca="ga . && git commit -am"
alias gl="git log --color --date=relative --format=format:'%C(cyan)%h%C(reset) %C(green)%ad %C(blue)(%an)%C(reset) %C(yellow)%d %C(reset)%s'"
alias gl1="gl -1 | cat"
alias gcommits="git shortlog -ns"
alias gm="git merge --ff-only"
alias gp="git push --tags "
alias gu="git pull --tags "
alias gg="git log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(cyan)%h %C(green)%ad %C(yellow)%d %C(reset)%s %C(blue)(%an)%C(reset)' --all"
alias branches="git branch -a"
alias test="be rake test"
alias test:all="be rake test:all"
alias s3='s3cmd'
alias h='heroku'

alias amend="git commit --amend"
function gf() {
  git fetch
  git checkout -b $1 origin/$1
}
function gdelete() {
  git branch -D $1
  git push origin :$1
}

# Usage:
#   gmerge topic-branch dev
function gmerge() {
  g $1
  git rebase $2
  g $2
  gm $1
}

# Usage:
#   gfmerge topic-branch dev
function gfmerge() {
  gf $1
  gmerge $1 $2
}

function gs() {
  if [ $1 ]; then
    git show $*
  else
    gbranch
    git show $current_branch
  fi
}
function gd() {
  if [ $1 ]; then
    git diff $*
  else
    git diff --cached
  fi
}
function ggrp() {
  gl --grep=$1
}
function gfm() {
  gf $*
  gm FETCH_HEAD
}
function gbranch() {
  current_branch=$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/')
}
function gpo() {
  # pushes the current branch; whatever that is
  gbranch
  gp origin $current_branch
}
function guo() {
  # pushes the current branch; whatever that is
  gbranch
  gu origin $current_branch
}

function pull() {
  gpo
  
  gbranch
  title="Put%20the%20ticket%20name%20and%20number%20here"
  if [[ "$current_branch" =~ ^ticket-([0-9]{1,6})$ ]]
  then
    ticket_number=${BASH_REMATCH[${#BASH_REMATCH[@]}-1]}
    title="Describe%20your%20changes%20%5B%23$ticket_number%5D"
  fi
  
  repo=${PWD##*/}
  open "https://github.com/concordia-publishing-house/$repo/pull/new/$current_branch?title=$title"
}


# dotfiles
alias alr=". ~/Me/bash/aliases"
alias _al="e ~/Me/bash/aliases && alr"
alias _me="e ~/Me"


